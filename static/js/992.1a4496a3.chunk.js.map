{"version":3,"file":"static/js/992.1a4496a3.chunk.js","mappings":"0KACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,0B,mBCchL,EAZmB,SAACA,GAGlB,OACE,gBAAKC,UAAWC,EAAAA,OAAiB,IAAMA,EAAAA,OAAvC,UACE,SAAC,KAAD,CAASC,GAAI,YAAcH,EAAMI,GAAjC,SAAsCJ,EAAMK,QAGjD,ECCD,EARgB,SAACL,GACf,OACE,gBAAKC,UAAWC,EAAAA,QAAhB,SACGF,EAAMM,SAGZ,E,iDCwDD,EAzDgB,SAACN,GAEf,IAAIO,EAAQP,EAAMQ,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OACtC,SAAC,EAAD,CAAYP,KAAMO,EAAOP,KAAMD,GAAIQ,EAAOR,IADJ,IAIpCS,EAAmBN,EAAMO,SAASH,KAAI,SAACL,GAAD,OACxC,SAAC,EAAD,CAASA,QAASA,EAAQA,SADc,IAWpCS,GAPeR,EAAMS,gBAOPC,EAAAA,EAAAA,GAAiB,KAqB/BC,GAAmBC,EAAAA,EAAAA,GAAU,CACjCC,KAAM,qBADiBD,EAnBL,SAACnB,GACnB,OACE,kBAAMqB,SAAUrB,EAAMsB,aAAtB,WACE,0BACE,SAACC,EAAA,EAAD,CACEC,YAAa,qBACbnB,KAAM,iBACNoB,UAAWC,EAAAA,EACXC,SAAU,CAACC,EAAAA,EAAUb,QAGzB,0BACE,iDAKP,IAMD,OAAKf,EAAM6B,QAGT,iBAAK5B,UAAWC,EAAAA,QAAhB,WACE,gBAAKD,UAAWC,EAAAA,aAAhB,SAAuCO,KACvC,gBAAKR,UAAWC,EAAAA,SAAhB,UACE,yBAAMW,OAER,SAACK,EAAD,CAAkBG,SArCA,SAACS,GACrB9B,EAAM+B,YAAYD,EAAOd,eAC1B,QA2ByB,SAAC,KAAD,CAAUb,GAAI,UAWzC,E,oBC/BD,GAAe6B,E,QAAAA,KACbC,EAAAA,EAAAA,KA3BoB,SAAC1B,GACrB,MAAO,CACLC,YAAaD,EAAMC,YAGtB,IAEwB,SAAC0B,GACxB,MAAO,CACLH,YAAa,SAACf,GACZkB,GAASC,EAAAA,EAAAA,GAAyBnB,GACnC,EAEJ,IAeCoB,EAAAA,EAFF,CAGEC,E","sources":["webpack://my-app/./src/Components/Dialogs/Dialogs.module.css?db5c","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/DialogMessage/DialogMessage.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__7Hmvy\",\"dialogsItems\":\"Dialogs_dialogsItems__PCxFJ\",\"active\":\"Dialogs_active__Ugg3u\",\"messages\":\"Dialogs_messages__YwRox\",\"message\":\"Dialogs_message__6rUes\"};","import { NavLink } from 'react-router-dom';\nimport classes from './../Dialogs.module.css';\n\nconst DialogItem = (props) => {\n  // let path = \"/dialogs/\" + props.id\n\n  return (\n    <div className={classes.dialog + ' ' + classes.active}>\n      <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\n    </div>\n  )\n}\n\n \n\nexport default DialogItem;\n","\nimport classes from './../Dialogs.module.css';\n\n\nconst Message = (props) => {\n  return (\n    <div className={classes.message}>\n      {props.message}\n    </div>\n  )\n}\n\nexport default Message;\n","import { Navigate, NavLink } from 'react-router-dom';\nimport classes from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './DialogMessage/DialogMessage';\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Textarea } from '../Common/Forms/FormsControls';\nimport { maxLengthCreator, required } from '../../Utilities/validators';\n\nconst Dialogs = (props) => {\n\n  let state = props.dialogsPage;\n\n  let dialogsElements = state.dialogs.map((dialog) => (\n    <DialogItem name={dialog.name} id={dialog.id} />\n  ));\n\n  let messagesElements = state.messages.map((message) => (\n    <Message message={message.message} />\n  ));\n\n  let newMessageText = state.newMessageText;\n\n\n  const addNewMessage = (values) => {\n    props.sendMessage(values.newMessageText)\n  }\n\n  const maxLength10 = maxLengthCreator(10)\n\n  const MessageForm = (props) => {\n    return (\n      <form onSubmit={props.handleSubmit}>\n        <div>\n          <Field\n            placeholder={'Enter your message'}\n            name={'newMessageText'}\n            component={Textarea}\n            validate={[required, maxLength10]}\n          ></Field>\n        </div>\n        <div>\n          <button>Send message</button>\n\n        </div>\n      </form>\n    );\n  };\n\n  const MessageReduxForm = reduxForm({\n    form: 'dialogMessageForm',\n  })(MessageForm);\n\n  if (!props.isAuth) return <Navigate to={'/login'} />;\n\n  return (\n    <div className={classes.dialogs}>\n      <div className={classes.dialogsItems}>{dialogsElements}</div>\n      <div className={classes.messages}>\n        <div>{messagesElements}</div>\n      </div>\n      <MessageReduxForm onSubmit={addNewMessage} />\n    </div>\n  );\n};\n\nexport default Dialogs;\n","import {sendMessageActionCreator} from '../../Redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../HOC/withAuthRedirect';\nimport { compose } from 'redux';\n\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage,\n    // isAuth: state.auth.isAuth\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageText) => {\n      dispatch(sendMessageActionCreator(newMessageText));\n    },\n  };\n};\n\n// compose(\n//   connect(mapStateToProps, mapDispatchToProps),\n//   withAuthRedirect\n// )(Dialogs)\n\n// let AuthRedirectComponent = withAuthRedirect(Dialogs)\n\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\n\n// export default DialogsContainer;\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs)\n"],"names":["props","className","classes","to","id","name","message","state","dialogsPage","dialogsElements","dialogs","map","dialog","messagesElements","messages","maxLength10","newMessageText","maxLengthCreator","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","isAuth","values","sendMessage","compose","connect","dispatch","sendMessageActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}